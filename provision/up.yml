---
- name: Spin Openshift local
  ansible.builtin.shell:
    cmd: ./crc-cloud.sh -C -p ~/Downloads/pull-secret.txt
    chdir: ./crc_cloud_repo
  register: crc_up_results

- name: Grab cluster info
  ansible.builtin.shell:
    cmd: cat workdir/latest/cluster_infos.json
    chdir: ./crc_cloud_repo
  register: cluster_info_results

- name: Cluster info in json format
  ansible.builtin.set_fact:
    jsondata: "{{ cluster_info_results.stdout | from_json }}"

- name: Cluster url fact
  ansible.builtin.set_fact:
    cluster_url: "{{ jsondata | json_query(jmesquery) }}"
  vars:
    jmesquery: api.address

- name: Cluster port fact
  ansible.builtin.set_fact:
    cluster_port: "{{ jsondata | json_query(jmesquery) }}"
  vars:
    jmesquery: api.port

- name: Python dependencies
  ansible.builtin.pip:
    requirements: "{{playbook_dir}}/requirements.txt"
    extra_args: --user

- name: Get access token
  community.kubernetes.k8s_auth:
    username: kubeadmin
    password: kubeadmin
    host: "{{ cluster_url }}:{{ cluster_port }}"
    validate_certs: false
  register: k8s_auth_results

- name: Deploy latest version of elastic chart
  kubernetes.core.helm:
    name: elasticsearch
    chart_repo_url: https://helm.elastic.co
    chart_ref: elasticsearch
    release_namespace: elastic
    create_namespace: true
    host: "{{ cluster_url }}:{{ cluster_port }}"
    api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
    validate_certs: false

# - name: Install Kibana
#   ansible.builtin.shell:
#     cmd: "CLUSTER_URL={{ cluster_url }} CLUSTER_PORT={{ cluster_port }}
#       API_KEY={{ k8s_auth_results.k8s_auth.api_key }} ./kibana.sh"

# - name: Expose kibana
#   ansible.builtin.shell:
#     cmd: oc expose svc/kibana-service
    # host: "{{ cluster_url }}:{{ cluster_port }}"
    # api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
